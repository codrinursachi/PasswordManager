<UserControl x:Class="PasswordManager.CustomControls.PasswordModelEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:PasswordManager.CustomControls"
             xmlns:viewModel="clr-namespace:PasswordManager.ViewModels.CustomControls"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="900"
             d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Storyboard x:Key="PasswordModelEditorStoryboard">
            <DoubleAnimation Duration="0:0:0.3"
                             Storyboard.TargetProperty="Opacity"
                             From="0"
                             To="0" />
            <DoubleAnimation Duration="0:0:0.3"
                             Storyboard.TargetProperty="Opacity"
                             From="0.2"
                             BeginTime="0:0:0.3" />
            <ThicknessAnimation Duration="0:0:0.3"
                                Storyboard.TargetProperty="Margin"
                                From="0,20,0,0"
                                To="0,20,0,0" />
            <ThicknessAnimation Duration="0:0:0.3"
                                Storyboard.TargetProperty="Margin"
                                From="0,20,0,0"
                                BeginTime="0:0:0.3" />
            <Storyboard.TargetName>pwdGrid</Storyboard.TargetName>
        </Storyboard>
    </UserControl.Resources>
    <Grid x:Name="pwdGrid"
          MinWidth="200">
        <behaviors:Interaction.Triggers>
            <behaviors:PropertyChangedTrigger Binding="{Binding Id}">
                <behaviors:ControlStoryboardAction Storyboard="{StaticResource PasswordModelEditorStoryboard}" />
            </behaviors:PropertyChangedTrigger>
        </behaviors:Interaction.Triggers>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <ScrollViewer>
            <StackPanel  Orientation="Vertical"
                         Width="auto"
                         Margin="25">
                <TextBlock Text="URL" />
                <TextBox x:Name="txtURL"
                         Text="{Binding Url, UpdateSourceTrigger=PropertyChanged}"
                         IsReadOnly="{Binding IsReadOnly}" />
                <TextBlock Text="{Binding UrlErrorMessage}"
                           Visibility="{Binding ElementName=txtURL, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                           Foreground="Red"
                           FontSize="12"
                           FontWeight="Medium"
                           Margin="0,5,0,0"
                           TextWrapping="Wrap" />
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <TextBlock Text="Username" />
                <TextBox x:Name="txtUser"
                         Text="{Binding Username, UpdateSourceTrigger=PropertyChanged}"
                         IsReadOnly="{Binding IsReadOnly}" />
                <TextBlock Text="{Binding UsernameErrorMessage}"
                           Visibility="{Binding ElementName=txtUser, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                           Foreground="Red"
                           FontSize="12"
                           FontWeight="Medium"
                           Margin="0,5,0,0"
                           TextWrapping="Wrap" />
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <TextBlock Text="Password" />
                <local:PasswordTextBox x:Name="txtPass" />
                <TextBlock Text="{Binding PasswordErrorMessage}"
                           Visibility="{Binding ElementName=txtPass, Path=pass.(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                           Foreground="Red"
                           FontSize="12"
                           FontWeight="Medium"
                           Margin="0,5,0,0"
                           TextWrapping="Wrap" />
                <Button x:Name="generatePass"
                        HorizontalAlignment="Center"
                        Command="{Binding ShowPasswordGeneratorCommand}"
                        Content="Generate Password" />
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <TextBlock Text="Expiration date" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <DatePicker x:Name="datePicker"
                                SelectedDate="{Binding ExpirationDate, TargetNullValue='',UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsEditingEnabled}" />
                    <Button Grid.Column="1"
                            Content="✖️"
                            Command="{Binding ClearDateCommand}"
                            IsEnabled="{Binding IsEditingEnabled}"/>
                </Grid>
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <TextBlock Text="Category Path" />
                <Grid>
                    <ComboBox Text="{Binding CategoryPathEndingChar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                              IsEditable="True" />
                    <ComboBox x:Name="txtCat"
                              ItemsSource="{Binding CategoryPaths, UpdateSourceTrigger=PropertyChanged}"
                              Text="{Binding CategoryPath}"
                              IsEditable="True"
                              IsReadOnly="{Binding IsReadOnly}"
                              Background="Transparent" />
                </Grid>
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <TextBlock Text="Tags" />
                <ListView x:Name="Tags"
                          Focusable="False"
                          Height="auto"
                          MaxHeight="120"
                          ItemsSource="{Binding CompletedTags}"
                          Background="Transparent"
                          BorderThickness="0"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          ItemContainerStyle="{StaticResource itemsAsButtons}"
                          IsEnabled="{Binding IsEditingEnabled}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Width="{Binding ElementName=Tags, Path=ActualWidth}" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="txtTag"
                             Text="{Binding Tag, UpdateSourceTrigger=PropertyChanged}"
                             IsReadOnly="{Binding IsReadOnly}" />
                    <Button Grid.Column="1"
                            Content="➕"
                            IsDefault="{Binding ElementName=txtTag, Path=IsKeyboardFocused}"
                            Command="{Binding AddTagCommand}"
                            IsEnabled="{Binding IsEditingEnabled}"/>
                </Grid>
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Favorite"
                               VerticalAlignment="Center" />
                    <CheckBox x:Name="chkFav"
                              VerticalAlignment="Center"
                              IsChecked="{Binding Favorite}"
                              Margin="20,0,0,0"
                              IsEnabled="{Binding IsEditingEnabled}" />
                </StackPanel>
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <TextBlock Text="Notes" />
                <TextBox x:Name="notes"
                         Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap"
                         VerticalContentAlignment="Top"
                         Height="80"
                         IsReadOnly="{Binding IsReadOnly}" />
                <Separator Style="{StaticResource separatorHorizontalSpacing}" />
                <Button x:Name="btnAdd"
                        Command="{Binding AddPasswordCommand}"
                        Content="Add"
                        Visibility="{Binding AddButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                        HorizontalAlignment="Center" />
            </StackPanel>
        </ScrollViewer>
        <Grid Grid.Row="1"
              Visibility="{Binding EditButtonVisible,Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Button VerticalAlignment="Bottom"
                    Grid.Column="1"
                    Command="{Binding DisableEditingCommand}"
                    Content="Cancel"
                    Visibility="{Binding IsEditingEnabled,Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Button x:Name="btnSave"
                    Grid.Column="2"
                    VerticalAlignment="Bottom"
                    Command="{Binding AvailableActionCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext}"
                    Content="{Binding CurrentAvailableAction}" />
        </Grid>
    </Grid>
</UserControl>
